#ifndef TWOPFONT_H
#define TWOPFONT_H

#include "Font.h"

const uint8_t FontTwoPData[] = {
	1,  // This font is proportional, so the first byte of each font character is the width in pixels.
	8,	// Maximum Width
	7,	// Height
	2,  // What is the width of a space character? (Optimization!)
	32,	// First Char
	95,	// Last Char
	8,	// char 0x20 ' '
	B8(00000000),
	B8(00000000),
	B8(00000000),
	B8(00000000),
	B8(00000000),
	B8(00000000),
	B8(00000000),
	3,	// char 0x21 '!'
	B8(11100000),
	B8(11100000),
	B8(11100000),
	B8(11000000),
	B8(11000000),
	B8(00000000),
	B8(11000000),
	5,	// char 0x22 '"'
	B8(11011000),
	B8(11011000),
	B8(11011000),
	B8(00000000),
	B8(00000000),
	B8(00000000),
	B8(00000000),
	7,	// char 0x23 '#'
	B8(01101100),
	B8(11111110),
	B8(01101100),
	B8(01101100),
	B8(01101100),
	B8(11111110),
	B8(01101100),
	7,	// char 0x24 '$'
	B8(00010000),
	B8(01111100),
	B8(11010000),
	B8(01111100),
	B8(00010110),
	B8(11111100),
	B8(00010000),
	7,	// char 0x25 '%'
	B8(01100010),
	B8(10100100),
	B8(11001000),
	B8(00010000),
	B8(00100110),
	B8(01001010),
	B8(10001100),
	0,	// char 0x26 '&'
	B8(00000000),
	B8(00000000),
	B8(00000000),
	B8(00000000),
	B8(00000000),
	B8(00000000),
	B8(00000000),
	2,	// char 0x27 '''
	B8(11000000),
	B8(11000000),
	B8(11000000),
	B8(00000000),
	B8(00000000),
	B8(00000000),
	B8(00000000),
	4,	// char 0x28 '('
	B8(00110000),
	B8(01100000),
	B8(11000000),
	B8(11000000),
	B8(11000000),
	B8(01100000),
	B8(00110000),
	4,	// char 0x29 ')'
	B8(11000000),
	B8(01100000),
	B8(00110000),
	B8(00110000),
	B8(00110000),
	B8(01100000),
	B8(11000000),
	7,	// char 0x2A '*'
	B8(00000000),
	B8(01101100),
	B8(00111000),
	B8(11111110),
	B8(00111000),
	B8(01101100),
	B8(00000000),
	6,	// char 0x2B '+'
	B8(00000000),
	B8(00110000),
	B8(00110000),
	B8(11111100),
	B8(00110000),
	B8(00110000),
	B8(00000000),
	3,	// char 0x2C ','
	B8(00000000),
	B8(00000000),
	B8(00000000),
	B8(00000000),
	B8(01100000),
	B8(01100000),
	B8(11000000),
	6,	// char 0x2D '-'
	B8(00000000),
	B8(00000000),
	B8(00000000),
	B8(11111100),
	B8(00000000),
	B8(00000000),
	B8(00000000),
	2,	// char 0x2E '.'
	B8(00000000),
	B8(00000000),
	B8(00000000),
	B8(00000000),
	B8(00000000),
	B8(11000000),
	B8(11000000),
	7,	// char 0x2F '/'
	B8(00000010),
	B8(00000100),
	B8(00001000),
	B8(00010000),
	B8(00100000),
	B8(01000000),
	B8(10000000),
	7,	// char 0x30 '0'
	B8(00111000),
	B8(01001100),
	B8(11000110),
	B8(11000110),
	B8(11000110),
	B8(01100100),
	B8(00111000),
	6,	// char 0x31 '1'
	B8(00110000),
	B8(01110000),
	B8(00110000),
	B8(00110000),
	B8(00110000),
	B8(00110000),
	B8(11111100),
	7,	// char 0x32 '2'
	B8(01111100),
	B8(11000110),
	B8(00001110),
	B8(00111100),
	B8(01111000),
	B8(11100000),
	B8(11111110),
	7,	// char 0x33 '3'
	B8(01111110),
	B8(00001100),
	B8(00011000),
	B8(00111100),
	B8(00000110),
	B8(11000110),
	B8(01111100),
	7,	// char 0x34 '4'
	B8(00011100),
	B8(00111100),
	B8(01101100),
	B8(11001100),
	B8(11111110),
	B8(00001100),
	B8(00001100),
	7,	// char 0x35 '5'
	B8(11111100),
	B8(11000000),
	B8(11111100),
	B8(00000110),
	B8(00000110),
	B8(11000110),
	B8(01111100),
	7,	// char 0x36 '6'
	B8(00111100),
	B8(01100000),
	B8(11000000),
	B8(11111100),
	B8(11000110),
	B8(11000110),
	B8(01111100),
	7,	// char 0x37 '7'
	B8(11111110),
	B8(11000110),
	B8(00001100),
	B8(00011000),
	B8(00110000),
	B8(00110000),
	B8(00110000),
	7,	// char 0x38 '8'
	B8(01111000),
	B8(11000100),
	B8(11100100),
	B8(01111000),
	B8(10011110),
	B8(10000110),
	B8(01111100),
	7,	// char 0x39 '9'
	B8(01111100),
	B8(11000110),
	B8(11000110),
	B8(01111110),
	B8(00000110),
	B8(00001100),
	B8(01111000),
	2,	// char 0x3A ':'
	B8(00000000),
	B8(11000000),
	B8(11000000),
	B8(00000000),
	B8(11000000),
	B8(11000000),
	B8(00000000),
	3,	// char 0x3B ';'
	B8(00000000),
	B8(01100000),
	B8(01100000),
	B8(00000000),
	B8(01100000),
	B8(01100000),
	B8(11000000),
	5,	// char 0x3C '<'
	B8(00011000),
	B8(00110000),
	B8(01100000),
	B8(11000000),
	B8(01100000),
	B8(00110000),
	B8(00011000),
	7,	// char 0x3D '='
	B8(00000000),
	B8(00000000),
	B8(11111110),
	B8(00000000),
	B8(11111110),
	B8(00000000),
	B8(00000000),
	5,	// char 0x3E '>'
	B8(11000000),
	B8(01100000),
	B8(00110000),
	B8(00011000),
	B8(00110000),
	B8(01100000),
	B8(11000000),
	7,	// char 0x3F '?'
	B8(01111100),
	B8(11111110),
	B8(11000110),
	B8(00001100),
	B8(00111000),
	B8(00000000),
	B8(00111000),
	7,	// char 0x40 '@'
	B8(01111100),
	B8(10000010),
	B8(10111010),
	B8(10101010),
	B8(10111110),
	B8(10000000),
	B8(01111100),
	7,	// char 0x41 'A'
	B8(00111000),
	B8(01101100),
	B8(11000110),
	B8(11000110),
	B8(11111110),
	B8(11000110),
	B8(11000110),
	7,	// char 0x42 'B'
	B8(11111100),
	B8(11000110),
	B8(11000110),
	B8(11111100),
	B8(11000110),
	B8(11000110),
	B8(11111100),
	7,	// char 0x43 'C'
	B8(00111100),
	B8(01100110),
	B8(11000000),
	B8(11000000),
	B8(11000000),
	B8(01100110),
	B8(00111100),
	7,	// char 0x44 'D'
	B8(11111000),
	B8(11001100),
	B8(11000110),
	B8(11000110),
	B8(11000110),
	B8(11001100),
	B8(11111000),
	7,	// char 0x45 'E'
	B8(11111110),
	B8(11000000),
	B8(11000000),
	B8(11111100),
	B8(11000000),
	B8(11000000),
	B8(11111110),
	7,	// char 0x46 'F'
	B8(11111110),
	B8(11000000),
	B8(11000000),
	B8(11111100),
	B8(11000000),
	B8(11000000),
	B8(11000000),
	7,	// char 0x47 'G'
	B8(00111110),
	B8(01100000),
	B8(11000000),
	B8(11001110),
	B8(11000110),
	B8(01100110),
	B8(00111110),
	7,	// char 0x48 'H'
	B8(11000110),
	B8(11000110),
	B8(11000110),
	B8(11111110),
	B8(11000110),
	B8(11000110),
	B8(11000110),
	6,	// char 0x49 'I'
	B8(11111100),
	B8(00110000),
	B8(00110000),
	B8(00110000),
	B8(00110000),
	B8(00110000),
	B8(11111100),
	7,	// char 0x4A 'J'
	B8(00000110),
	B8(00000110),
	B8(00000110),
	B8(00000110),
	B8(00000110),
	B8(11000110),
	B8(01111100),
	7,	// char 0x4B 'K'
	B8(11000110),
	B8(11001100),
	B8(11011000),
	B8(11110000),
	B8(11111000),
	B8(11011100),
	B8(11001110),
	6,	// char 0x4C 'L'
	B8(11000000),
	B8(11000000),
	B8(11000000),
	B8(11000000),
	B8(11000000),
	B8(11000000),
	B8(11111100),
	7,	// char 0x4D 'M'
	B8(11000110),
	B8(11101110),
	B8(11111110),
	B8(11111110),
	B8(11010110),
	B8(11000110),
	B8(11000110),
	7,	// char 0x4E 'N'
	B8(11000110),
	B8(11100110),
	B8(11110110),
	B8(11111110),
	B8(11011110),
	B8(11001110),
	B8(11000110),
	7,	// char 0x4F 'O'
	B8(01111100),
	B8(11000110),
	B8(11000110),
	B8(11000110),
	B8(11000110),
	B8(11000110),
	B8(01111100),
	7,	// char 0x50 'P'
	B8(11111100),
	B8(11000110),
	B8(11000110),
	B8(11000110),
	B8(11111100),
	B8(11000000),
	B8(11000000),
	7,	// char 0x51 'Q'
	B8(01111100),
	B8(11000110),
	B8(11000110),
	B8(11000110),
	B8(11011110),
	B8(11001100),
	B8(01111010),
	7,	// char 0x52 'R'
	B8(11111100),
	B8(11000110),
	B8(11000110),
	B8(11001110),
	B8(11111000),
	B8(11011100),
	B8(11001110),
	7,	// char 0x53 'S'
	B8(01111000),
	B8(11001100),
	B8(11000000),
	B8(01111100),
	B8(00000110),
	B8(11000110),
	B8(01111100),
	6,	// char 0x54 'T'
	B8(11111100),
	B8(00110000),
	B8(00110000),
	B8(00110000),
	B8(00110000),
	B8(00110000),
	B8(00110000),
	7,	// char 0x55 'U'
	B8(11000110),
	B8(11000110),
	B8(11000110),
	B8(11000110),
	B8(11000110),
	B8(11000110),
	B8(01111100),
	7,	// char 0x56 'V'
	B8(11000110),
	B8(11000110),
	B8(11000110),
	B8(11101110),
	B8(01111100),
	B8(00111000),
	B8(00010000),
	7,	// char 0x57 'W'
	B8(11000110),
	B8(11000110),
	B8(11010110),
	B8(11111110),
	B8(11111110),
	B8(11101110),
	B8(11000110),
	7,	// char 0x58 'X'
	B8(11000110),
	B8(11101110),
	B8(01111100),
	B8(00111000),
	B8(01111100),
	B8(11101110),
	B8(11000110),
	6,	// char 0x59 'Y'
	B8(11001100),
	B8(11001100),
	B8(11001100),
	B8(01111000),
	B8(00110000),
	B8(00110000),
	B8(00110000),
	7,	// char 0x5A 'Z'
	B8(11111110),
	B8(00001110),
	B8(00011100),
	B8(00111000),
	B8(01110000),
	B8(11100000),
	B8(11111110),
	4,	// char 0x5B '['
	B8(11110000),
	B8(11000000),
	B8(11000000),
	B8(11000000),
	B8(11000000),
	B8(11000000),
	B8(11110000),
	7,	// char 0x5C '\'
	B8(10000000),
	B8(01000000),
	B8(00100000),
	B8(00010000),
	B8(00001000),
	B8(00000100),
	B8(00000010),
	4,	// char 0x5D ']'
	B8(11110000),
	B8(00110000),
	B8(00110000),
	B8(00110000),
	B8(00110000),
	B8(00110000),
	B8(11110000),
	5,	// char 0x5E '^'
	B8(01110000),
	B8(11011000),
	B8(00000000),
	B8(00000000),
	B8(00000000),
	B8(00000000),
	B8(00000000),
	7,	// char 0x5F '_'
	B8(00000000),
	B8(00000000),
	B8(00000000),
	B8(00000000),
	B8(00000000),
	B8(00000000),
	B8(11111110)	
};

#endif